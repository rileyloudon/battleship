(()=>{"use strict";const t=(t,e)=>"computer"===t?{name:"Computer",availableAttacks:[...Array(100).keys()],foundShipSpot:void 0,attackVertical:!1,horizontalSquareBeforeHit:void 0,verticalSquareBeforeHit:void 0,attack(){let t;const i=()=>{const e=Math.floor(Math.random()*(this.availableAttacks.length-1));t=this.availableAttacks[e],t=t<10?("0"+t).split(""):t.toString().split("")},a=()=>{for(let t=this.foundShipSpot[0];t>="0";t--)if("hit"!==e.board.row[t][this.foundShipSpot[1]]){this.verticalSquareBeforeHit=t;break}"9"===this.foundShipSpot[0]||"empty"!==e.board.row[parseInt(this.foundShipSpot[0])+1][this.foundShipSpot[1]]&&"object"!=typeof e.board.row[parseInt(this.foundShipSpot[0])+1][this.foundShipSpot[1]]?"0"===this.foundShipSpot[0]||void 0===this.verticalSquareBeforeHit||"empty"!==e.board.row[this.verticalSquareBeforeHit][this.foundShipSpot[1]]&&"object"!=typeof e.board.row[this.verticalSquareBeforeHit][this.foundShipSpot[1]]?(i(),this.attackVertical=!1,this.foundShipSpot=void 0):t=[this.verticalSquareBeforeHit.toString(),this.foundShipSpot[1]]:t=[(parseInt(this.foundShipSpot[0])+1).toString(),this.foundShipSpot[1]]};if(this.foundShipSpot){if(this.attackVertical)a();else{for(let t=this.foundShipSpot[1];t>="0";t--)if("hit"!==e.board.row[this.foundShipSpot[0]][t]){this.horizontalSquareBeforeHit=t;break}"9"===this.foundShipSpot[1]||"empty"!==e.board.row[this.foundShipSpot[0]][parseInt(this.foundShipSpot[1])+1]&&"object"!=typeof e.board.row[this.foundShipSpot[0]][parseInt(this.foundShipSpot[1])+1]?"0"===this.foundShipSpot[1]||void 0===this.horizontalSquareBeforeHit||"empty"!==e.board.row[this.foundShipSpot[0]][this.horizontalSquareBeforeHit]&&"object"!=typeof e.board.row[this.foundShipSpot[0]][this.horizontalSquareBeforeHit]?"9"!==this.foundShipSpot[1]&&"miss"!==e.board.row[this.foundShipSpot[0]][parseInt(this.foundShipSpot[1])+1]||"0"!==this.foundShipSpot[1]&&"miss"!==e.board.row[this.foundShipSpot[0]][parseInt(this.foundShipSpot[1])-1]?i():(this.attackVertical=!0,a()):t=[this.foundShipSpot[0],this.horizontalSquareBeforeHit.toString()]:t=[this.foundShipSpot[0],(parseInt(this.foundShipSpot[1])+1).toString()]}t<10&&(t=("0"+t).split(""))}else i();"empty"!==e.board.row[t[0]][t[1]]&&(this.foundShipSpot=t);const r=t[0],n=t[1],o=this.availableAttacks.findIndex((e=>e===parseInt(t.join(""))));this.availableAttacks.splice(o,1),e.recieveAttack(r,n)}}:{name:t,attack(t,i){e.recieveAttack(t,i)}},e=(t,e,i,a)=>{let r;switch(!0){case"Carrier"===i:r=5;break;case"Battleship"===i:r=4;break;case"Cruiser"===i:case"Submarine"===i:r=3;break;case"Destroyer"===i:r=2;break;default:return new Error("Unable to assign ship length")}return{name:i,length:r,orientation:a,startPos:{x:t,y:e},hitSpots:[...Array(r).fill(!1)],sunk:!1,hit(t){this.hitSpots[t]=!0,this.hitSpots.every((t=>!0===t))&&(this.sunk=!0)},isSunk(){return!!this.sunk}}},i=()=>({gameboardShips:[],allShipsSunk:!1,board:{row:{0:[...Array(10).fill("empty")],1:[...Array(10).fill("empty")],2:[...Array(10).fill("empty")],3:[...Array(10).fill("empty")],4:[...Array(10).fill("empty")],5:[...Array(10).fill("empty")],6:[...Array(10).fill("empty")],7:[...Array(10).fill("empty")],8:[...Array(10).fill("empty")],9:[...Array(10).fill("empty")]}},placeShip(t,i,a,r){this.gameboardShips.some((t=>t.name===a))&&this.removeShip(a),this.gameboardShips.push(e(t,i,a,r));const n=this.gameboardShips[this.gameboardShips.length-1].length;"horizontal"===r?((t,e,i)=>{if(!(e+i<=this.board.row[t].length))throw new Error("Not enough space for that ship!");for(let a=e;a<e+i;a++)if("empty"!==this.board.row[t][a])throw new Error("Can't place a ship on another ship.");for(let a=e;a<e+i;a++)this.board.row[t][a]=this.gameboardShips[this.gameboardShips.length-1]})(t,i,n):"vertical"===r&&((t,e,i)=>{if(!(t+i<=Object.keys(this.board.row).length))throw new Error("Not enough space for that ship!");for(let a=t;a<t+i;a++)if("empty"!==this.board.row[a][e])throw new Error("Can't place a ship on another ship.");for(let a=t;a<t+i;a++)this.board.row[a][e]=this.gameboardShips[this.gameboardShips.length-1]})(t,i,n)},randomPlaceShip(t,e){const i=0===Math.floor(2*Math.random())?"horizontal":"vertical",a="horizontal"===i?Math.floor(Math.random()*(9-e)):Math.floor(9*Math.random()),r="horizontal"===i?Math.floor(9*Math.random()):Math.floor(Math.random()*(9-e));try{this.placeShip(a,r,t,i)}catch{this.randomPlaceShip(t,e)}},removeShip(t){this.gameboardShips=this.gameboardShips.filter((e=>e.name!==t)),Object.entries(this.board.row).forEach(((e,i)=>e[1].forEach(((e,a)=>{"empty"!==e&&e.name===t&&(this.board.row[i][a]="empty")}))))},recieveAttack(t,e){const i=this.board.row[t][e];"empty"===i?this.board.row[t][e]="miss":(this.board.row[t][e]="hit","horizontal"===i.orientation?i.hit(e-i.startPos.y):i.hit(t-i.startPos.x),i.isSunk()&&this.gameboardShips.every((t=>!0===t.sunk))&&(this.allShipsSunk=!0))}}),a=(t,e,i)=>{const a=()=>Object.entries(t.board.row).map(((t,e)=>t[1].map(((t,i)=>"empty"===t?`<div class='ocean' id='${e.toString()+i.toString()}'></div>`:`<div class='${t.name.toLowerCase()}' id='${e.toString()+i.toString()}'></div>`)).join(""))).join("");document.getElementById("app").innerHTML=`\n      <h2>Battleship</h2>\n      <h4>${e} - Place Your Ships</h4>\n      ${"Player 1"===i||"Player 2"===i?`<p>(Don't let ${i} see!)</p>`:""}\n      <div class='ships'>\n        <label>\n          <input type='radio' name='ship' value='Carrier' checked>\n          <span class='text ship'>Carrier (5 Spots)</span>\n        </label>\n        <label>\n          <input type='radio' name='ship' value='Battleship'>\n          <span class='text ship'>Battleship (4 Spots)</span>\n        </label>        \n        <label>\n          <input type='radio' name='ship' value='Cruiser'>\n          <span class='text ship'>Cruiser (3 Spots)</span>\n        </label>        \n        <label>\n          <input type='radio' name='ship' value='Submarine'>\n          <span class='text ship'>Submarine (3 Spots)</span>\n        </label>        \n        <label>\n          <input type='radio' name='ship' value='Destroyer'>\n          <span class='text ship'>Destroyer (2 Spots)</span>\n        </label>\n      </div>\n      <div class='ship-orientation'>\n        <label>\n          <input type='radio' name='orientation' value='horizontal' checked>\n          <span class='text'>Horizontal</span>\n        </label>\n        <label>\n          <input type='radio' name='orientation' value='vertical'>\n          <span class='text'>Vertical</span>\n        </label>\n      </div>\n      <p class='error'>Error</p>\n      <div class='container'>\n        ${a()}\n      </div>\n      <button id='save'>Save Ships</button>\n    `,document.querySelectorAll(".ocean").forEach((t=>t.addEventListener("click",(t=>r(t)))));const r=e=>{const i=document.querySelector("input[name=ship]:checked").value,n=document.querySelector("input[name=orientation]:checked").value,o=e.target.id.split(""),s=parseInt(o[0]),l=parseInt(o[1]);try{t.placeShip(s,l,i,n),document.querySelector(".error").style.visibility="hidden"}catch(t){document.querySelector(".error").innerHTML=t.message,document.querySelector(".error").style.visibility="visible"}document.querySelector(".container").innerHTML=a(),document.querySelectorAll(".ocean").forEach((t=>t.addEventListener("click",(t=>r(t)))))}},r=t=>Object.entries(t.board.row).map(((t,e)=>t[1].map(((t,i)=>"miss"===t?`<div class='miss' id='${e.toString()+i.toString()}'></div>`:"hit"===t?`<div class='hit' id='${e.toString()+i.toString()}'></div>`:`<div class='p1 ocean' id='${e.toString()+i.toString()}'></div>`)).join(""))).join(""),n=t=>Object.entries(t.board.row).map(((t,e)=>t[1].map(((t,i)=>"miss"===t?`<div class='miss' id='${e.toString()+i.toString()}'></div>`:"hit"===t?`<div class='hit' id='${e.toString()+i.toString()}'></div>`:`<div class='p2 ocean' id='${e.toString()+i.toString()}'></div>`)).join(""))).join(""),o=t=>`<h4>${t}'s Turn</h4>`,s=t=>{document.querySelector(".indicator").innerHTML=`\n  <h4>${t} Wins!</h4>`},l=(t,e,r)=>{const n=i();"Player 2"===e?(a(n,e,t),document.getElementById("save").addEventListener("click",(()=>{try{if(5!==n.gameboardShips.length)throw new Error("Make sure to place all your ships.");p(t,e,r,n)}catch(t){document.querySelector(".error").innerHTML=t.message,document.querySelector(".error").style.visibility="visible"}}))):(n.randomPlaceShip("Carrier",5),n.randomPlaceShip("Battleship",4),n.randomPlaceShip("Cruiser",3),n.randomPlaceShip("Submarine",3),n.randomPlaceShip("Destroyer",2),p(t,e,r,n))},p=(e,i,a,l)=>{const p=t(e,l),h=t(i,a);let c=p,d=!1;((t,e)=>{document.getElementById("app").innerHTML=`      \n    <h2>Battleship</h2>\n    <div class='indicator'>\n      ${o("Player 1")}\n    </div>\n    <div class='battle'>\n      <div class='player-1'>\n        <h4>Player 1</h4>\n        <div class='container-p1'>\n          ${n(e)}\n        </div>\n        </div>\n        <div class='player-2'>\n        <h4>Player 2</h4>\n        <div class='container-p2'>\n          ${r(t)}\n        </div>\n      </div>\n    </div>\n  `})(a,l);const S=t=>{setTimeout((()=>{const e=c===p?l:a;t.attack(),c===p?document.querySelector(".container-p1").innerHTML=n(l):document.querySelector(".container-p2").innerHTML=r(a),e.allShipsSunk?(d=!0,s(c===p?"Player 1":"Player 2")):(c=c===p?h:p,document.querySelector(".indicator").innerHTML=o(c===p?"Player 1":"Player 2"),"Computer"===c.name&&S(c))}),500)};"Computer"===c.name&&S(c),"Computer"===p.name&&"Computer"===h.name||document.querySelectorAll(".ocean").forEach((t=>t.addEventListener("click",(t=>u(t)))));const u=t=>{if(!d){const e=c===p?"p2":"p1";if(c&&t.target.classList.contains(e)){const e=c===p?l:a,i=t.target.id.split(""),m=parseInt(i[0]),y=parseInt(i[1]);c.attack(m,y),c===p?document.querySelector(".container-p1").innerHTML=n(l):document.querySelector(".container-p2").innerHTML=r(a),document.querySelectorAll(".ocean").forEach((t=>t.addEventListener("click",(t=>u(t))))),e.allShipsSunk?(d=!0,s(c===p?"Player 1":"Player 2")):(c=c===p?h:p,document.querySelector(".indicator").innerHTML=o(c===p?"Player 1":"Player 2"),"Computer"===c.name&&S(c))}}}};document.getElementById("app").innerHTML="\n    <h2>Battleship</h2>\n    <p>Who's playing?</p>\n    \n    <p>Player 1</p>\n    <label class='material-icons'> \n      <input type='radio' name='player1' value='human' checked>\n      <span>&#xE7FD</span>\n    </label>\n    <label class='material-icons'> \n      <input type='radio' name='player1' value='computer'>\n      <span>&#xe30a</span>\n    </label>\n\n    <p>Player 2</p>\n    <label class='material-icons'>\n      <input type='radio' name='player2' value='human' >\n      <span>&#xE7FD</span>\n    </label>\n     <label class='material-icons'>\n      <input type='radio' name='player2' value='computer' checked>\n      <span>&#xe30a</span>\n    </label>\n\n    <br />\n\n    <button id='start-game'>Start Game</button>\n  ",document.getElementById("start-game").addEventListener("click",(()=>{((t,e)=>{const r=i();"Player 1"===t?(a(r,t,e),document.getElementById("save").addEventListener("click",(()=>{try{if(5!==r.gameboardShips.length)throw new Error("Make sure to place all your ships.");l(t,e,r)}catch(t){document.querySelector(".error").innerHTML=t.message,document.querySelector(".error").style.visibility="visible"}}))):(r.randomPlaceShip("Carrier",5),r.randomPlaceShip("Battleship",4),r.randomPlaceShip("Cruiser",3),r.randomPlaceShip("Submarine",3),r.randomPlaceShip("Destroyer",2),l(t,e,r))})("human"===document.querySelector("input[name=player1]:checked").value?"Player 1":"computer","human"===document.querySelector("input[name=player2]:checked").value?"Player 2":"computer")}))})();